testdata <- read.csv('trial run data 1901')
testdata <- read.csv('trial run data 1901.csv')
if (!require(rstudioapi)) {install.packages("rstudioapi"); require(rstudioapi)} ##for the getActiveDocumentContext() function used below
current_path <- getActiveDocumentContext()$path    ## gets path for this R script
setwd(dirname(current_path))
getwd()
testdata <- read.csv('trial run data 1901.csv')
testdata <- read.csv('trial run data 1901')
read.csv('trial run data 1901')
read.csv('1901 Project_April 4, 2023_11.47 2.csv')
testdata <-  read.csv('1901 Project_April 4, 2023_11.47 2.csv')
head(testdata)
head(testdata)
view(testdata)
if (!require(car)) {install.packages("car"); require(car)}
if (!require(psych)) {install.packages("psych"); require(psych)}
view(testdata)
View(testdata)
myNumbers <- c(2342, 4.2, 19, 7, 100, 6)
myNumbers[1] # extract the first element
# Install packages (if necessary) and load required libraries
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
data<- read_csv("testdata2.csv")
data<- read_csv("testdata2.csv")
# Describe data in memory
summary(dat)
# Describe data in memory
summary(data)
data <- data[-2,]
data <- data[-1,]
Nonleader_data <- data[,29:36]
# Describe data in memory
summary(data)
View(data)
# removing rows 1 and 2 from data
data <- data[-2,]
data <- data[-1,]
data <- data[-2,]
data <- data[-1,]
View(data)
Nonleader_data <- data[,29:36]
rlang::last_trace()
data <- df[,-c(1,4)]
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
setwd("C:/Users/marty/OneDrive/Documents/Psych 1901/Data for final paper")
# Describe data in memory
summary(data)
data <- data[-2,]
data <- data[-1,]
data <- data[-3,]
data <- data[-4,]
data <- data[-5,]
data <- data[-6,]
data <- data[-7,]
Nonleader_data <- data[,29:36]
View(data)
source("~/Desktop/Code for final paper (1).R", echo=TRUE)
Nonleader_data <- data[,5:12]
Leader_data <- data[, 13:20]
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...36 == 100)
View(Nonleader_data)
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...92 == 100)
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...12 == 100)
View(Leader_data)
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...12 == 100)
Leader_data_Qcheck <- Leader_data %>%
filter(Leader_data$QCheck_1...20 == 100)
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
data <- data[-2,]
data <- data[-1,]
data <- data[-3,]
data <- data[-4,]
data <- data[-5,]
data <- data[-6,]
data <- data[-7,]
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
setwd("C:/Users/marty/OneDrive/Documents/Psych 1901/Data for final paper")
summary(data)
# Describe data in memory
summary(data)
data<- read_csv("Data.csv")
# Install packages (if necessary) and load required libraries
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
#set working directory
setwd("C:/Users/marty/OneDrive/Documents/Psych 1901/Data for final paper")
summary(data)
data <- data[-2,]
data <- data[-2,]
data<- read_csv("Data.csv")
data<- read_csv("testdata2.csv")
data <- data[-2,]
data <- data[-1,]
data <- data[-3,]
data <- data[-4,]
data <- data[-5,]
data <- data[-6,]
data <- data[-7,]
View(data)
Leader_data <- data[, 13:20]
Nonleader_data <- data[,5:12]
Leader_data <- data[, 13:20]
View(Nonleader_data)
View(Leader_data)
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...12 == 100)
Leader_data_Qcheck <- Leader_data %>%
filter(Leader_data$QCheck_1...20 == 100)
Nonleader_data <- na.omit(Nonleader_data)
Nonleader_data_Qcheck <- na.omit(Nonleader_data_Qcheck)
Leader_data <- na.omit(Leader_data)
Leader_data_Qcheck <- na.omit(Leader_data_Qcheck)
Nonleader_data <- Nonleader_data[,-8]
Nonleader_data_Qcheck <- Nonleader_data_Qcheck[,-8]
Leader_data <- Leader_data[,-8]
Leader_data_Qcheck <- Leader_data_Qcheck[,-8]
t.test(Nonleader_data$variable_name, Leader_data$variable_name,
var.equal = TRUE, alternative = "two.sided")
boxplot(alldata$Q2, alldatagraphs)
par(mfrow=c(1,1))
boxplot(alldata$Q2, alldatagraphs)
NLDalldata <- data[,21:28]
NLDalldata <- na.omit(NLDalldata)
data<- read_csv("1901 project final data.csv")
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(rdrobust)) install.packages("rdrobust"); library(rdrobust)
if (!require(sandwich)) install.packages("sandwich"); library(sandwich)
if (!require(lmtest)) install.packages("lmtest"); library(lmtest)
install.packages("ggplot2movies")
library(ggplot2)
if (!require(dplyr)) install.packages("dplyr"); library(dplyr)
data<- read_csv("1901 project final data.csv")
data <- data[-2,]
data <- data[-1,]
data <- data[-3,]
data <- data[-4,]
data <- data[-5,]
data <- data[-6,]
data <- data[-7,]
Nonleader_data <- data[,21:28]
Leader_data <- data[, 29:36]
View(Leader_data)
View(Nonleader_data)
Nonleader_data_Qcheck <- Nonleader_data %>%
filter(Nonleader_data$QCheck_1...28 == 100)
Leader_data_Qcheck <- Leader_data %>%
filter(Leader_data$QCheck_1...36 == 100)
Nonleader_data <- na.omit(Nonleader_data)
Nonleader_data_Qcheck <- na.omit(Nonleader_data_Qcheck)
Leader_data <- na.omit(Leader_data)
Leader_data_Qcheck <- na.omit(Leader_data_Qcheck)
Nonleader_data <- Nonleader_data[,-8]
Nonleader_data_Qcheck <- Nonleader_data_Qcheck[,-8]
Leader_data <- Leader_data[,-8]
Leader_data_Qcheck <- Leader_data_Qcheck[,-8]
Nonleader_data[] <- lapply(Nonleader_data, as.numeric)
Nonleader_data_Qcheck[] <- lapply(Nonleader_data_Qcheck, as.numeric)
Leader_data[] <- lapply(Leader_data, as.numeric)
Leader_data_Qcheck[] <- lapply(Leader_data_Qcheck, as.numeric)
Nonleader_data$average <- rowMeans(Nonleader_data) #Copy this code again 3 times for each data frame
Leader_data$average <- rowMeans(Leader_data)
View(Leader_data)
Nonleader_data_Qcheck$average <- rowMeans(Nonleader_data_Qcheck)
Leader_data_Qcheck$average <- rowMeans(Leader_data_Qcheck)
View(Leader_data_Qcheck)
t.test(Nonleader_data$average, Leader_data$average,
var.equal = TRUE, alternative = "two.sided")
t.test(Nonleader_data$Q2_1, Leader_data$Q2.1_1,
var.equal = TRUE, alternative = "two.sided")
NLDalldata <- data[,21:28]
LDalldata <- data[, 29:36]
View(LDalldata)
NLDalldata <- na.omit(NLDalldata)
LDalldata <- na.omit(LDalldata)
NLDalldata_Qcheck <- NLDalldata %>%
filter(NLDalldata$QCheck_1...28 == 100)
LDalldata_Qcheck <- LDalldata %>%
filter(LDalldata$QCheck_1...36 == 100)
View(NLDalldata_Qcheck)
NLDalldata <- NLDalldata[,-8]
NLDalldata_Qcheck<- NLDalldata_Qcheck[,-8]
LDalldata <- LDalldata[,-8]
LDalldata_Qcheck <- LDalldata_Qcheck[,-8]
NLDalldata[] <- lapply(NLDalldata, as.numeric)
NLDalldata_Qcheck[] <- lapply(NLDalldata_Qcheck, as.numeric)
LDalldata[] <- lapply(LDalldata, as.numeric)
LDalldata_Qcheck[] <- lapply(LDalldata_Qcheck, as.numeric)
colnames(LDalldata) <- c("Q1", "Q2", "Q3", "Q4", "Q5", "Q6", "Q7", "average")
colnames(NLDalldata) <- c("Q1", "Q2", "Q3", "Q4", "Q5", "Q6", "Q7", "average")
alldata <- rbind(NLDalldata, LDalldata)
alldata <- alldata[,-8]
View(alldata)
colMeans(alldata)
alldatagraphs <-unlist(alldata)
par(mfrow=c(1,1))
boxplot(alldata$Q2, alldatagraphs)
boxplot(alldata$Q2, alldatagraphs, names = c("Q2 answers", "all vignette answers"))
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2 responses", "all vignette answers"))
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2", "All vignettes"))
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2", "All vignettes"), ylab = "Punishment ratings")
?boxplot
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #2 vs. overall punishment ratings") )
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #2 vs. overall punishment ratings" )
boxplot(alldata$Q2, alldatagraphs, names = c("Vignette #2", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #2 vs. Overall Punishment Ratings")
boxplot(alldata$Q3, alldatagraphs, names = c("Vignette #3", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #3 vs. Overall Punishment Ratings")
t.test(alldata$Q3, alldata, var.equal = TRUE, alternative = "two.sided") #SIG
boxplot(alldata$Q6, alldatagraphs, names = c("Vignette #6", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #6 vs. Overall Punishment Ratings")
boxplot(alldata$Q7, alldatagraphs, names = c("Vignette #7", "All vignettes"), ylab = "Punishment ratings", main = "Vignette #6 vs. Overall Punishment Ratings")
t.test(Nonleader_data&Q3_1, Leader_data$Q3.1_1, var.equal = TRUE, alternative = "two.sided")
t.test(Nonleader_data$Q3_1, Leader_data$Q3.1_1, var.equal = TRUE, alternative = "two.sided")
t.test(Nonleader_data$Q6_1, Leader_data$Q6.1_1, var.equal = TRUE, alternative = "two.sided")
t.test(Nonleader_data$Q7_1, Leader_data$Q7.1_1, var.equal = TRUE, alternative = "two.sided")
myVar <-- 2 + 2
my Var <- 2 + 2
myVar <- 2 + 2
myVar <- 2 + 2
myVar <- 2 + 2
print(myVar)
#### Scope setup ---------------------------------------------------------------
dir.create("~/Desktop/psy1903/stats/scope_example")
setwd("~/Desktop/psy1903/stats/scope_example")
#### Global vs. Local Variable x -----------------------------------------------
x <- 10          # Global variable x is defined as 10
#### Global vs. Local Variable x -----------------------------------------------
x <- 10          # Global variable x is defined as 10
my_function <- function() {
x <- 20       # Local variable within the function x is defined as 20
print(x)      # This will print 20 (the local variable x)
}
my_function()   # Call the function. This will print 20 (the local variable x)
print(x)        # Outside the function, this will print 10 (the global variable x)
x <- 10  # Global variable x is defined as 10
# Create a loop that defines x within the loop
for(i in 1:3) {
x <- 20  # Local variable x inside the loop
print(x)  # This will print 20, the local x inside the loop
}
print(x)  # Outside the loop, global x will have been overwritten as 20
#### Defining x locally in a function ------------------------------------------
## Function without argument x set
my_function <- function() {
x * 2
}
my_function() # Produces the error: "Error in my_function() : object 'x' not found" because x is not defined in either global or local environment
## Function with variable x set in global environment
x <- 10
my_function <- function() {
x * 2
}
my_function() # Uses global variable x, which is assigned the value of 10, and outputs 20. Will cause errors after removing global variable x, or will not update x as expected
my_function <- function(x) {
x * 2
}
my_function(5) # Passes the value directly via the argument, e.g., `x <- 5` is implicitly coded by placing the 5 in the x position of the function argument, and each call of my_function(x) will produce an updated output of x * 2 as expected
## Read in data file to a data frame called iat_test
iat_test <- read.csv(" ~/Desktop/psy1903/stats/data_cleaning/data/my-iat-test-data.csv")
## Read in data file to a data frame called iat_test
iat_test <- read.csv("~/Desktop/psy1903/stats/data_cleaning/data/my-iat-test-data.csv")
View(iat_test)
## Extract questionnaire data
json_data <- iat_test[iat_test$trialType == "Questionnaire", "response"]
## Use fromJSON to Convert from JSON to data frame
questionnaire <- fromJSON(json_data)
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot", "jsonlite")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot", "jsonlite")
## Use fromJSON to Convert from JSON to data frame
questionnaire <- fromJSON(json_data)
str(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
str(questionnaire)
## Reverse score if necessary
rev_items <- c("question1", "question3", "question5", "question7")
for (rev_item in rev_items) {
questionnaire[,rev_item] <- 5 - questionnaire[,rev_item]
}
str(questionnaire)
## Calculate mean or sum score
score <- rowMeans(questionnaire, na.rm = TRUE)
